var vows = require('vows'),
    sinon = require('sinon'),
    expect = require('chai').expect,
    sinon = require('sinon'),
    _ = require('underscore'),
    Player = require('logic/Player/Player'),
    Card = require('./Card.js'),
    Treasury = require('logic/Treasury/Treasury');

vows.describe('Card').addBatch({
    'Messenger': {
        'Should add 8 talers to subject player': function() {
            var player = new Player(),
                treasury = new Treasury(),
                playerMoney = player.resources.money,
                messenger = new Card.Messenger(player, {
                    treasury: treasury
                });

            messenger.play();

            expect(player.resources.money).to.equal(playerMoney + 8);
        }
    },
    'Trader': {
        'Should allow to place trader': function() {
            var player = new Player(),
                game = {
                    allowToPlaceTrader: sinon.spy(),
                    placeTrader: sinon.spy(),
                    silverTraderIsAllowed: sinon.stub().returns(true)
                },
                trader = new Card.Trader(player, game);

            trader.play();
            expect(game.allowToPlaceTrader.called).to.be.true();
            player.emit('place.trader', 'wood'); //todo: method?
            expect(game.placeTrader.called).to.be.true();
        },
        'Should bring resources to all players who have placed traders': function() {

        },
        'Should supply defence tower with each resource type picked': function() {

        },
        'Should prefer defence tower to players when taking resources from common resources reserve': function() {

        }
    }
}).export(module);
