var vows = require('vows'),
    assert = require('assert'),
    _ = require('underscore'),
    ResourceBag = require('./ResourceBag');

var deepContains = function(array, value) {
        return array.some(function(arrayValue) {
            return _.isEqual(arrayValue, value);
        });
    },
    arraysEqual = function(a, b) {
        return a.every(function(value){
            return deepContains(b, value);
        }) && b.every(function(value){
            return deepContains(a, value);
        });
    };

var haveVariants = function(price) {
    var variants = [].slice.call(arguments, 1),
        topic = function() { return price; },
        context = {
            topic: topic
        };
    
    context[price + ' should be factorized in ' + variants.join('; ')] = function(topic) {
        var calculatedVariants = ResourceBag.getVariants(topic);
        assert.isTrue(arraysEqual(calculatedVariants, variants));
    };
    return context;
};

vows.describe('ResourceBag').addBatch({
    'Variants of build points': {
        8: haveVariants(8, [4, 2, 1, 1], [5, 2, 1]),
        10: haveVariants(10, [5, 4, 1], [5, 2, 2, 1], [5, 2, 1, 1, 1], [4, 2, 2, 1, 1], [4, 2, 1, 1, 1, 1])
    }
}).export(module);
