var  _ = require('underscore'),
    colors = ['red', 'yellow', 'green', 'blue'],
    util = require('util'),
    EventEmitter = require('service/EventEmitter/EventEmitter');

var GameParticipants = function(config) {
        this._maxPlaces = config.maxPlaces;
        this._participants = [];
    },
    GameParticipant = function (config) {
        this.color = config.color;
        this.player = config.player;
    };

util.inherits(GameParticipants, EventEmitter);

_(GameParticipants.prototype).extend({
    _getNextColor: function() {
        return colors[this._participants.length];
    },

    length: function() {
        return this._participants.length;
    },

    join: function(player) {
        if (this._participants.length >= this._maxPlaces) {
            this.emit('participants.full');
            return;
        }

        var participant = new GameParticipant({
            color: this._getNextColor(),
            player: player
        });

        this._participants.push(participant);
        this.emit('participant.joined', participant);

        if (this._participants.length === this._maxPlaces) {
            this.emit('participants.filled');
        }
    },

    playersSequence: function(round) {
        var len = this._participants.length,
            index = round % len,
            result = [];

        for (var i = index; i < len + index; i++) {
            result.push(this._participants[i % len]);
        }

        return result;
    }
});

module.exports = GameParticipants;
